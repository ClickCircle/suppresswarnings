package com.suppresswarnings.osgi.command;

import java.util.function.BiConsumer;

import org.eclipse.osgi.framework.console.CommandInterpreter;
import org.eclipse.osgi.framework.console.CommandProvider;
import org.slf4j.LoggerFactory;

import com.suppresswarnings.osgi.data.DataService;

@Deprecated
public class Commander implements CommandProvider {
	DataService dataService;
	String version = "001";
	org.slf4j.Logger logger = LoggerFactory.getLogger("SYSTEM");
	
	public void data(DataService leveldb) {
		logger.info("[Commander] init dataService: " + leveldb);
		this.dataService = leveldb;
	}
	public void clearData(DataService leveldb) {
		logger.info("[Commander] release dataService: msg:" + leveldb + " here:" + this.dataService);
		this.dataService = null;
	}

	@Override
	public String getHelp() {
		StringBuffer buffer = new StringBuffer();
		buffer.append("---SuppressWarnings Command Generated by LiJiaming---\n");
		buffer.append("\tinput - input <data> - save data into dataService.\n");
		buffer.append("\tlistmine - listmine <uid> - list mine data limit 10 by dataService.\n");
		return buffer.toString();
	}
	
	public void _input(CommandInterpreter ci) {
		logger.info("[Commander] input data by dataService: " + dataService);
		String arg = ci.nextArgument();
		ci.println("input arg: "+ arg);
		if(arg.length() > 0) {
			int ret = dataService.unknown("lijiaming", arg);
			ci.println("data saved: "+ ret);
		}
	}
	public void _listmine(CommandInterpreter ci){
		logger.info("[Commander] list mine data by dataService: " + dataService);
		String start = ci.nextArgument();
		String limit = ci.nextArgument();
		int limited = 10;
		if(limit.length() > 0) {
			limited = Integer.valueOf(limit);
		}
		dataService.listSome(start, limited, new BiConsumer<String, String>() {
			
			@Override
			public void accept(String t, String u) {
				ci.println("[Commander] " + t + " => " + u);
			}
		});
	}
}